static const uint8_t at[] =
{
  0,  1,  1,  2,  2,  3,  3,  4,  5,  5,
  6,  6,  7,  7,  8,  9,  9, 10, 10, 11,
  11, 12, 12, 13, 13, 14, 15, 15, 16, 16,
  17, 17, 18, 18, 19, 19, 20, 20, 21, 21,
  22, 22, 23, 23, 24, 24, 25, 25, 26, 26,
  27, 27, 27, 28, 28, 29, 29, 30, 30, 31,
  31, 31, 32, 32, 33, 33, 33, 34, 34, 35,
  35, 35, 36, 36, 37, 37, 37, 38, 38, 38,
  39, 39, 39, 40, 40, 40, 41, 41, 41, 42,
  42, 42, 43, 43, 43, 44, 44, 44, 44, 45, 45
};

static const uint16_t RGB3322565[] =
{
  0x0000, 0x000a, 0x0015, 0x001f, 0x0120, 0x012a, 0x0135, 0x013f,
  0x0240, 0x024a, 0x0255, 0x025f, 0x0360, 0x036a, 0x0375, 0x037f,
  0x0480, 0x048a, 0x0495, 0x049f, 0x05a0, 0x05aa, 0x05b5, 0x05bf,
  0x06c0, 0x06ca, 0x06d5, 0x06df, 0x07e0, 0x07ea, 0x07f5, 0x07ff,
  0x2000, 0x200a, 0x2015, 0x201f, 0x2120, 0x212a, 0x2135, 0x213f,
  0x2240, 0x224a, 0x2255, 0x225f, 0x2360, 0x236a, 0x2375, 0x237f,
  0x2480, 0x248a, 0x2495, 0x249f, 0x25a0, 0x25aa, 0x25b5, 0x25bf,
  0x26c0, 0x26ca, 0x26d5, 0x26df, 0x27e0, 0x27ea, 0x27f5, 0x27ff,
  0x4800, 0x480a, 0x4815, 0x481f, 0x4920, 0x492a, 0x4935, 0x493f,
  0x4a40, 0x4a4a, 0x4a55, 0x4a5f, 0x4b60, 0x4b6a, 0x4b75, 0x4b7f,
  0x4c80, 0x4c8a, 0x4c95, 0x4c9f, 0x4da0, 0x4daa, 0x4db5, 0x4dbf,
  0x4ec0, 0x4eca, 0x4ed5, 0x4edf, 0x4fe0, 0x4fea, 0x4ff5, 0x4fff,
  0x6800, 0x680a, 0x6815, 0x681f, 0x6920, 0x692a, 0x6935, 0x693f,
  0x6a40, 0x6a4a, 0x6a55, 0x6a5f, 0x6b60, 0x6b6a, 0x6b75, 0x6b7f,
  0x6c80, 0x6c8a, 0x6c95, 0x6c9f, 0x6da0, 0x6daa, 0x6db5, 0x6dbf,
  0x6ec0, 0x6eca, 0x6ed5, 0x6edf, 0x6fe0, 0x6fea, 0x6ff5, 0x6fff,
  0x9000, 0x900a, 0x9015, 0x901f, 0x9120, 0x912a, 0x9135, 0x913f,
  0x9240, 0x924a, 0x9255, 0x925f, 0x9360, 0x936a, 0x9375, 0x937f,
  0x9480, 0x948a, 0x9495, 0x949f, 0x95a0, 0x95aa, 0x95b5, 0x95bf,
  0x96c0, 0x96ca, 0x96d5, 0x96df, 0x97e0, 0x97ea, 0x97f5, 0x97ff,
  0xb000, 0xb00a, 0xb015, 0xb01f, 0xb120, 0xb12a, 0xb135, 0xb13f,
  0xb240, 0xb24a, 0xb255, 0xb25f, 0xb360, 0xb36a, 0xb375, 0xb37f,
  0xb480, 0xb48a, 0xb495, 0xb49f, 0xb5a0, 0xb5aa, 0xb5b5, 0xb5bf,
  0xb6c0, 0xb6ca, 0xb6d5, 0xb6df, 0xb7e0, 0xb7ea, 0xb7f5, 0xb7ff,
  0xd800, 0xd80a, 0xd815, 0xd81f, 0xd920, 0xd92a, 0xd935, 0xd93f,
  0xda40, 0xda4a, 0xda55, 0xda5f, 0xdb60, 0xdb6a, 0xdb75, 0xdb7f,
  0xdc80, 0xdc8a, 0xdc95, 0xdc9f, 0xdda0, 0xddaa, 0xddb5, 0xddbf,
  0xdec0, 0xdeca, 0xded5, 0xdedf, 0xdfe0, 0xdfea, 0xdff5, 0xdfff,
  0xf800, 0xf80a, 0xf815, 0xf81f, 0xf920, 0xf92a, 0xf935, 0xf93f,
  0xfa40, 0xfa4a, 0xfa55, 0xfa5f, 0xfb60, 0xfb6a, 0xfb75, 0xfb7f,
  0xfc80, 0xfc8a, 0xfc95, 0xfc9f, 0xfda0, 0xfdaa, 0xfdb5, 0xfdbf,
  0xfec0, 0xfeca, 0xfed5, 0xfedf, 0xffe0, 0xffea, 0xfff5, 0xffff
};

static const uint8_t font1[] =
{

  0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char
  0x00, 0x06, 0x5F, 0x06, 0x00,      // Code for char !
  0x07, 0x03, 0x00, 0x07, 0x03,      // Code for char "
  0x24, 0x7E, 0x24, 0x7E, 0x24,      // Code for char #
  0x24, 0x2B, 0x6A, 0x12, 0x00,      // Code for char $
  0x63, 0x13, 0x08, 0x64, 0x63,      // Code for char %
  0x36, 0x49, 0x56, 0x20, 0x50,      // Code for char &
  0x00, 0x07, 0x03, 0x00, 0x00,      // Code for char '
  0x00, 0x3E, 0x41, 0x00, 0x00,      // Code for char (
  0x00, 0x41, 0x3E, 0x00, 0x00,      // Code for char )
  0x08, 0x3E, 0x1C, 0x3E, 0x08,      // Code for char *
  0x08, 0x08, 0x3E, 0x08, 0x08,      // Code for char +
  0x00, 0xE0, 0x60, 0x00, 0x00,      // Code for char ,
  0x08, 0x08, 0x08, 0x08, 0x08,      // Code for char -
  0x00, 0x60, 0x60, 0x00, 0x00,      // Code for char .
  0x20, 0x10, 0x08, 0x04, 0x02,      // Code for char /
  0x3E, 0x51, 0x49, 0x45, 0x3E,      // Code for char 0
  0x00, 0x42, 0x7F, 0x40, 0x00,      // Code for char 1
  0x62, 0x51, 0x49, 0x49, 0x46,      // Code for char 2
  0x22, 0x49, 0x49, 0x49, 0x36,      // Code for char 3
  0x18, 0x14, 0x12, 0x7F, 0x10,      // Code for char 4
  0x2F, 0x49, 0x49, 0x49, 0x31,      // Code for char 5
  0x3C, 0x4A, 0x49, 0x49, 0x30,      // Code for char 6
  0x01, 0x71, 0x09, 0x05, 0x03,      // Code for char 7
  0x36, 0x49, 0x49, 0x49, 0x36,      // Code for char 8
  0x06, 0x49, 0x49, 0x29, 0x1E,      // Code for char 9
  0x00, 0x6C, 0x6C, 0x00, 0x00,      // Code for char :
  0x00, 0xEC, 0x6C, 0x00, 0x00,      // Code for char ;
  0x08, 0x14, 0x22, 0x41, 0x00,      // Code for char <
  0x24, 0x24, 0x24, 0x24, 0x24,      // Code for char =
  0x00, 0x41, 0x22, 0x14, 0x08,      // Code for char >
  0x02, 0x01, 0x59, 0x09, 0x06,      // Code for char ?
  0x3E, 0x41, 0x5D, 0x55, 0x1E,      // Code for char @
  0x7E, 0x11, 0x11, 0x11, 0x7E,      // Code for char A
  0x7F, 0x49, 0x49, 0x49, 0x36,      // Code for char B
  0x3E, 0x41, 0x41, 0x41, 0x22,      // Code for char C
  0x7F, 0x41, 0x41, 0x41, 0x3E,      // Code for char D
  0x7F, 0x49, 0x49, 0x49, 0x41,      // Code for char E
  0x7F, 0x09, 0x09, 0x09, 0x01,      // Code for char F
  0x3E, 0x41, 0x49, 0x49, 0x7A,      // Code for char G
  0x7F, 0x08, 0x08, 0x08, 0x7F,      // Code for char H
  0x00, 0x41, 0x7F, 0x41, 0x00,      // Code for char I
  0x30, 0x40, 0x40, 0x40, 0x3F,      // Code for char J
  0x7F, 0x08, 0x14, 0x22, 0x41,      // Code for char K
  0x7F, 0x40, 0x40, 0x40, 0x40,      // Code for char L
  0x7F, 0x02, 0x04, 0x02, 0x7F,      // Code for char M
  0x7F, 0x02, 0x04, 0x08, 0x7F,      // Code for char N
  0x3E, 0x41, 0x41, 0x41, 0x3E,      // Code for char O
  0x7F, 0x09, 0x09, 0x09, 0x06,      // Code for char P
  0x3E, 0x41, 0x51, 0x21, 0x5E,      // Code for char Q
  0x7F, 0x09, 0x09, 0x19, 0x66,      // Code for char R
  0x26, 0x49, 0x49, 0x49, 0x32,      // Code for char S
  0x01, 0x01, 0x7F, 0x01, 0x01,      // Code for char T
  0x3F, 0x40, 0x40, 0x40, 0x3F,      // Code for char U
  0x1F, 0x20, 0x40, 0x20, 0x1F,      // Code for char V
  0x3F, 0x40, 0x3C, 0x40, 0x3F,      // Code for char W
  0x63, 0x14, 0x08, 0x14, 0x63,      // Code for char X
  0x07, 0x08, 0x70, 0x08, 0x07,      // Code for char Y
  0x71, 0x49, 0x45, 0x43, 0x00,      // Code for char Z
  0x00, 0x7F, 0x41, 0x41, 0x00,      // Code for char [
  0x02, 0x04, 0x08, 0x10, 0x20,      // Code for <BackSlash>
  0x00, 0x41, 0x41, 0x7F, 0x00,      // Code for char ]
  0x04, 0x02, 0x01, 0x02, 0x04,      // Code for char ^
  0x80, 0x80, 0x80, 0x80, 0x80,      // Code for char _
  0x00, 0x03, 0x07, 0x00, 0x00,      // Code for char `
  0x20, 0x54, 0x54, 0x54, 0x78,      // Code for char a
  0x7F, 0x44, 0x44, 0x44, 0x38,      // Code for char b
  0x38, 0x44, 0x44, 0x44, 0x28,      // Code for char c
  0x38, 0x44, 0x44, 0x44, 0x7F,      // Code for char d
  0x38, 0x54, 0x54, 0x54, 0x08,      // Code for char e
  0x08, 0x7E, 0x09, 0x09, 0x00,      // Code for char f
  0x18, 0xA4, 0xA4, 0xA4, 0x7C,      // Code for char g
  0x7F, 0x04, 0x04, 0x78, 0x00,      // Code for char h
  0x00, 0x00, 0x7D, 0x40, 0x00,      // Code for char i
  0x40, 0x80, 0x84, 0x7D, 0x00,      // Code for char j
  0x7F, 0x10, 0x28, 0x44, 0x00,      // Code for char k
  0x00, 0x00, 0x7F, 0x40, 0x00,      // Code for char l
  0x7C, 0x04, 0x18, 0x04, 0x78,      // Code for char m
  0x7C, 0x04, 0x04, 0x78, 0x00,      // Code for char n
  0x38, 0x44, 0x44, 0x44, 0x38,      // Code for char o
  0xFC, 0x44, 0x44, 0x44, 0x38,      // Code for char p
  0x38, 0x44, 0x44, 0x44, 0xFC,      // Code for char q
  0x44, 0x78, 0x44, 0x04, 0x08,      // Code for char r
  0x08, 0x54, 0x54, 0x54, 0x20,      // Code for char s
  0x04, 0x3E, 0x44, 0x24, 0x00,      // Code for char t
  0x3C, 0x40, 0x20, 0x7C, 0x00,      // Code for char u
  0x1C, 0x20, 0x40, 0x20, 0x1C,      // Code for char v
  0x3C, 0x60, 0x30, 0x60, 0x3C,      // Code for char w
  0x6C, 0x10, 0x10, 0x6C, 0x00,      // Code for char x
  0x9C, 0xA0, 0x60, 0x3C, 0x00,      // Code for char y
  0x64, 0x54, 0x54, 0x4C, 0x00,      // Code for char z
  0x08, 0x3E, 0x41, 0x41, 0x00,      // Code for char {
  0x00, 0x00, 0x77, 0x00, 0x00,      // Code for char |
  0x00, 0x41, 0x41, 0x3E, 0x08,      // Code for char }
  0x02, 0x01, 0x02, 0x01, 0x00,      // Code for char ~
  0x06, 0x09, 0x09, 0x06, 0x00       // Code for <Degrees>
};

static const uint8_t font2[] =
{
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  192, 192, 192, 192, 192, 192, 192, 192, 192, 0, 192, 192, 192, 0, 0, 0,
  216, 216, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  108, 108, 108, 108, 254, 254, 108, 254, 254, 108, 108, 108, 108, 0, 0, 0,
  24, 24, 124, 254, 210, 248, 124, 22, 150, 254, 124, 24, 24, 0, 0, 0,
  0, 198, 198, 12, 12, 24, 24, 48, 48, 96, 96, 198, 198, 0, 0, 0,
  56, 124, 108, 124, 56, 120, 108, 205, 197, 198, 206, 125, 125, 0, 0, 0,
  0, 192, 192, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  48, 48, 96, 96, 192, 192, 192, 192, 192, 192, 96, 96, 48, 48, 0, 0,
  192, 192, 96, 96, 48, 48, 48, 48, 48, 48, 96, 96, 192, 192, 0, 0,
  0, 0, 198, 198, 108, 56, 254, 254, 56, 108, 198, 198, 0, 0, 0, 0,
  0, 0, 48 , 48, 48, 48, 252, 252, 48, 48, 48, 48, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 96, 192, 128, 0,
  0, 0, 0, 0, 0, 0, 248, 248, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 224, 224, 0, 0, 0, 0,
  0, 0, 6, 6, 12, 12, 24, 24, 48, 48, 96, 96, 192, 192, 0, 0,
  124, 254, 198, 198, 206, 206, 222, 246, 230, 230, 198, 254, 124, 0, 0, 0,
  48, 112, 112, 48, 48, 48, 48, 48, 48, 48, 48, 252, 252, 0, 0, 0,
  124, 254, 198, 6, 6, 62, 124, 224, 192, 192, 192, 254, 254, 0, 0, 0,
  124, 254, 198, 6, 6, 30, 28, 6, 6, 6, 198, 254, 124, 0, 0, 0,
  12, 28, 28, 60, 108, 108, 204, 204, 254, 254, 12, 12, 12, 0, 0, 0,
  252, 252, 192, 192, 192, 248, 252, 14, 6, 6, 198, 254, 124, 0, 0, 0,
  124, 254, 198, 192, 192, 248, 252, 206, 198, 198, 230, 254, 124, 0, 0, 0,
  254, 254, 198, 12, 12, 24, 24, 48, 48, 48, 48, 48, 48, 0, 0, 0,
  124, 254, 198, 198, 198, 254, 124, 198, 198, 198, 198, 254, 124, 0, 0, 0,
  124, 254, 198, 198, 198, 254, 126, 6, 6, 6, 6, 254, 124, 0, 0, 0,
  0, 0, 0, 192, 192, 0, 0, 0, 192, 192, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 96, 96, 0, 0, 0, 96, 96, 192, 128, 0, 0, 0, 0,
  24, 24, 48, 48, 96, 96, 192, 192, 96, 96, 48, 48, 24, 24, 0, 0,
  0, 0, 0, 0, 248, 248, 0, 0, 248, 248, 0, 0, 0, 0, 0, 0,
  192, 192, 96, 96, 48, 48, 24, 24, 48, 48, 96, 96, 192, 192, 0, 0,
  124, 254, 198, 6, 14, 28, 56, 48, 48, 0, 0, 48, 48, 0, 0, 0,
  0, 0, 0, 0, 28, 34, 78, 82, 82, 82, 78, 32, 31, 0, 0, 0,
  16, 56, 108, 108, 198, 198, 254, 254, 198, 198, 198, 198, 198, 0, 0, 0,
  252, 254, 198, 198, 198, 254, 252, 198, 198, 198, 198, 254, 252, 0, 0, 0,
  124, 254, 198, 192, 192, 192, 192, 192, 192, 192, 198, 254, 124, 0, 0, 0,
  248, 252, 206, 198, 198, 198, 198, 198, 198, 198, 206, 252, 248, 0, 0, 0,
  254, 254, 192, 192, 192, 248, 248, 192, 192, 192, 192, 254, 254, 0, 0, 0,
  254, 254, 192, 192, 192, 248, 248, 192, 192, 192, 192, 192, 192, 0, 0, 0,
  56, 124, 230, 192, 192, 192, 222, 222, 198, 198, 238, 124, 56, 0, 0, 0,
  198, 198, 198, 198, 198, 254, 254, 198, 198, 198, 198, 198, 198, 0, 0, 0,
  48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0,
  6, 6, 6, 6, 6, 6, 6, 6, 6, 198, 238, 124, 56, 0, 0, 0,
  198, 198, 204, 204, 216, 248, 240, 216, 216, 204, 204, 198, 198, 0, 0, 0,
  192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 254, 254, 0, 0, 0,
  195, 231, 231, 255, 255, 255, 219, 219, 219, 219, 219, 195, 195, 0, 0, 0,
  198, 198, 230, 230, 230, 246, 246, 222, 222, 206, 206, 198, 198, 0, 0, 0,
  56, 124, 238, 198, 198, 198, 198, 198, 198, 198, 238, 124, 56, 0, 0, 0,
  248, 252, 206, 198, 206, 252, 248, 192, 192, 192, 192, 192, 192, 0, 0, 0,
  56, 124, 238, 198, 198, 198, 198, 198, 214, 222, 204, 126, 58, 0, 0, 0,
  248, 252, 206, 198, 206, 252, 248, 216, 216, 204, 204, 198, 198, 0, 0, 0,
  60, 126, 230, 192, 224, 120, 60, 14, 6, 6, 206, 252, 120, 0, 0, 0,
  252, 252, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0,
  198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 254, 124, 0, 0, 0,
  198, 198, 198, 198, 198, 198, 198, 108, 108, 56, 56, 16, 16, 0, 0, 0,
  195, 219, 219, 219, 219, 219, 255, 255, 255, 231, 231, 195, 195, 0, 0, 0,
  198, 198, 108, 108, 56, 56, 16, 56, 56, 108, 108, 198, 198, 0, 0, 0,
  204, 204, 204, 204, 120, 120, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0,
  254, 254, 12, 24, 24, 48, 48, 96, 96, 192, 192, 254, 254, 0, 0, 0,
  240, 240, 192, 192, 192, 192, 192, 192, 192, 192, 192, 240, 240, 0, 0, 0,
  128, 192, 192, 96, 32, 48, 16, 24, 8, 12, 4, 6, 2, 0, 0, 0,
  240, 240, 48, 48, 48, 48, 48, 48, 48, 48, 48, 240, 240, 0, 0, 0,
  16, 16, 56, 56, 108, 108, 198, 198, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
  0, 192, 192, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 120, 252, 204, 124, 252, 204, 204, 254, 119, 0, 0, 0,
  192, 192, 192, 192, 248, 252, 204, 204, 204, 204, 204, 252, 248, 0, 0, 0,
  0, 0, 0, 0, 120, 252, 196, 192, 192, 192, 196, 252, 120, 0, 0, 0,
  12, 12, 12, 12, 124, 252, 204, 204, 204, 204, 204, 252, 124, 0, 0, 0,
  0, 0, 0, 0, 120, 252, 204, 252, 248, 192, 196, 252, 120, 0, 0, 0,
  12, 60, 48, 48, 252, 252, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0,
  0, 0, 0, 0, 120, 252, 204, 204, 204, 252, 124, 12, 140, 252, 120, 0,
  192, 192, 192, 192, 248, 252, 204, 204, 204, 204, 204, 204, 204, 0, 0, 0,
  48, 48, 0, 0, 112, 112, 48, 48, 48, 48, 48, 120, 120, 0, 0, 0,
  24, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 24, 152, 248, 112, 0,
  192, 192, 196, 204, 216, 240, 224, 240, 216, 200, 204, 198, 198, 0, 0, 0,
  224, 224, 96, 96, 96, 96, 96, 96, 96, 96, 96, 240, 240, 0, 0, 0,
  0, 0, 0, 0, 236, 254, 214, 214, 214, 198, 198, 198, 198, 0, 0, 0,
  0, 0, 0, 0, 248, 252, 204, 204, 204, 204, 204, 204, 204, 0, 0, 0,
  0, 0, 0, 0, 120, 252, 204, 204, 204, 204, 204, 252, 120, 0, 0, 0,
  0, 0, 0, 0, 248, 252, 204, 204, 204, 204, 252, 248, 192, 192, 192, 0,
  0, 0, 0, 0, 124, 252, 204, 204, 204, 204, 252, 124, 12, 12, 6, 0,
  0, 0, 0, 0, 216, 252, 238, 198, 192, 192, 192, 192, 192, 0, 0, 0,
  0, 0, 0, 0, 120, 252, 196, 240, 120, 12, 140, 252, 120, 0, 0, 0,
  48, 48, 48, 48, 252, 252, 48, 48, 48, 48, 48, 28, 12, 0, 0, 0,
  0, 0, 0, 0, 204, 204, 204, 204, 204, 204, 204, 252, 120, 0, 0, 0,
  0, 0, 0, 0, 198, 198, 198, 108, 108, 56, 56, 16, 16, 0, 0, 0,
  0, 0, 0, 0, 198, 198, 198, 214, 214, 124, 108, 108, 40, 0, 0, 0,
  0, 0, 0, 0, 198, 198, 108, 124, 56, 124, 108, 198, 198, 0, 0, 0,
  0, 0, 0, 0, 204, 204, 204, 204, 204, 252, 124, 12, 140, 252, 120, 0,
  0, 0, 0, 0, 252, 252, 24, 24, 48, 48, 96, 252, 252, 0, 0, 0,
  0, 12, 24, 24, 24, 24, 24, 48, 24, 24, 24, 24, 24, 12, 0, 0,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0,
  0, 48, 24, 24, 24, 24, 24, 12, 24, 24, 24, 24, 24, 48, 0, 0,
  0, 0, 0, 0, 0, 96, 226, 158, 12, 0, 0, 0, 0, 0, 0, 0,
  120, 252, 204, 204, 204, 204, 252, 120, 0, 0, 0, 0, 0, 0, 0, 0
};